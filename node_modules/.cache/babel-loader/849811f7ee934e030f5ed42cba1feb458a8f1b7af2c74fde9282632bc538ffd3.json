{"ast":null,"code":"import { EventDispatcher } from \"three\";\nclass Material {\n  constructor(originalMaterial, animationUtil, name, serialNum) {\n    this.meterial = originalMaterial;\n    this.animationUtil = animationUtil;\n    this.name = name;\n    this.count = 0;\n    this.railNum = 0; //转道号1||2\n    //add: 添加物料时候， reduce: 取走物料\n    this.event = {\n      'moveto': 'moveto',\n      'add': 'add',\n      'reduce': 'reduce'\n    };\n    this.serialNum = serialNum;\n    // this.speed = 8;\n    this.defaultPostionX = this.meterial.position.x;\n  }\n  moveToByX(distance, speed = 12, callback) {\n    let direction = true; //正方向\n    if (this.meterial.position.x > distance) {\n      direction = false;\n    }\n    let a = function () {\n      if (direction) {\n        this.meterial.position.x = this.meterial.position.x + speed;\n        if (this.meterial.position.x >= distance) {\n          callback();\n          return;\n        } else {\n          this.animationUtil.render(a);\n        }\n      } else {\n        this.meterial.position.x = this.meterial.position.x - speed;\n        if (this.meterial.position.x <= distance) {\n          callback();\n          return;\n        } else {\n          this.animationUtil.render(a);\n        }\n      }\n    }.bind(this, direction);\n    a(direction);\n  }\n  disable() {\n    this.meterial.visible = false;\n  }\n  block() {\n    this.meterial.visible = true;\n  }\n  isVisible() {\n    return this.meterial.visible;\n  }\n  count() {\n    return this.count;\n  }\n  add(tester_name) {\n    this.count++;\n    this.dispatchEvent({\n      type: this.event.add,\n      message: {\n        tester_mess: tester_name\n      }\n    });\n    if (this.meterial.visible === false) {\n      this.meterial.visible = true;\n    }\n  }\n  reduce() {\n    this.count--;\n    //this.dispatchEvent( {type: this.event.reduce, message: this.count } );\n    if (this.count <= 0) {\n      this.meterial.visible = false;\n    }\n  }\n  setRailNum(railNum) {\n    this.railNum = railNum;\n  }\n  reset() {\n    this.meterial.position.x = this.defaultPostionX;\n  }\n}\nObject.assign(Material.prototype, EventDispatcher.prototype);\nexport default Material;","map":{"version":3,"names":["EventDispatcher","Material","constructor","originalMaterial","animationUtil","name","serialNum","meterial","count","railNum","event","defaultPostionX","position","x","moveToByX","distance","speed","callback","direction","a","render","bind","disable","visible","block","isVisible","add","tester_name","dispatchEvent","type","message","tester_mess","reduce","setRailNum","reset","Object","assign","prototype"],"sources":["/Users/jens/my-app/src/utils/Material.js"],"sourcesContent":["import { EventDispatcher } from \"three\";\r\n\r\nclass Material{\r\n    constructor(originalMaterial, animationUtil, name, serialNum){\r\n        this.meterial = originalMaterial;\r\n        this.animationUtil = animationUtil;\r\n        this.name = name;\r\n        this.count = 0;\r\n        this.railNum = 0;//转道号1||2\r\n        //add: 添加物料时候， reduce: 取走物料\r\n        this.event = {'moveto': 'moveto', 'add': 'add', 'reduce': 'reduce'};\r\n        this.serialNum = serialNum;\r\n        // this.speed = 8;\r\n        this.defaultPostionX = this.meterial.position.x; \r\n    }\r\n\r\n    moveToByX(distance, speed = 12,callback){\r\n        let direction = true;//正方向\r\n        if (this.meterial.position.x > distance){\r\n            direction = false;\r\n        }\r\n        let a = function(){\r\n            if (direction){\r\n                this.meterial.position.x = this.meterial.position.x +speed;\r\n                if (this.meterial.position.x >= distance){\r\n                    callback();\r\n                    return;\r\n                } else {\r\n                    this.animationUtil.render(a);\r\n                }\r\n            } else {\r\n                this.meterial.position.x = this.meterial.position.x - speed;\r\n                if (this.meterial.position.x <= distance){\r\n                    callback();\r\n                    return;\r\n                } else {\r\n                    this.animationUtil.render(a);\r\n                }\r\n            }\r\n            \r\n            \r\n        }.bind(this, direction);\r\n\r\n        a(direction);\r\n    }\r\n\r\n    disable(){\r\n        this.meterial.visible = false;\r\n    }\r\n\r\n    block(){\r\n        this.meterial.visible = true;\r\n    }\r\n\r\n    isVisible(){\r\n        return this.meterial.visible;\r\n    }\r\n\r\n    count(){\r\n        return this.count;\r\n    }\r\n\r\n    add(tester_name){\r\n       this.count++;\r\n       this.dispatchEvent( { type: this.event.add, message: {tester_mess:tester_name} } );\r\n       if (this.meterial.visible === false){\r\n            this.meterial.visible = true;\r\n        }\r\n    }\r\n\r\n    reduce(){\r\n        this.count--;\r\n        //this.dispatchEvent( {type: this.event.reduce, message: this.count } );\r\n        if (this.count <= 0){\r\n            this.meterial.visible = false;\r\n        }\r\n    }\r\n\r\n    setRailNum(railNum){\r\n        this.railNum = railNum;\r\n    }\r\n\r\n    reset(){\r\n        this.meterial.position.x = this.defaultPostionX; \r\n    }\r\n\r\n}\r\n\r\nObject.assign(Material.prototype, EventDispatcher.prototype);\r\n\r\nexport default Material;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}