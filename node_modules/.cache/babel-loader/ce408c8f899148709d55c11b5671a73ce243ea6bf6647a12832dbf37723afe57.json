{"ast":null,"code":"import { EventDispatcher } from \"three\";\nimport AnimationUtil from '@/utils/AnimationUtil';\nclass Machine {\n  constructor(original, animationUtil, name) {\n    this.machine = original;\n    this.speed = 0.5;\n    this.angle = 0; //default angle.\n    this.animationUtil = animationUtil;\n    this.name = name;\n    this.event = {\n      'rotationY': 'rotationY',\n      'rotationZ': 'rotationZ',\n      'positionY': 'positionY'\n    };\n  }\n\n  /**\r\n   * orientation = 1: 顺\r\n   * orientation = -1: 逆\r\n   * 逆时针，角度越来越大。这里只往一个方向转，由大到小，然后，由小到大\r\n   */\n  rotationY(message) {\n    let originalAngle = this.machine.rotation.y,\n      tmpAngle = this.machine.rotation.y,\n      orientation;\n    if (message.angle > originalAngle) {\n      //当目标角度大于原来角度\n      orientation = -1; //逆时针\n    } else {\n      orientation = 1; //顺时针\n    }\n    let fn = function (angle, orientation) {\n      if (orientation === -1) {\n        //角度越来越大，逆时针\n        tmpAngle += this.speed;\n        this.machine.rotation.y = tmpAngle;\n      } else {\n        tmpAngle -= this.speed;\n        this.machine.rotation.y = tmpAngle;\n      }\n      if (tmpAngle + this.speed >= angle && orientation === -1) {\n        //逆时针，角度越来越大\n        this.machine.rotation.y = angle;\n        this.animationUtil.renderOnly();\n        this.dispatchEvent({\n          type: this.event.rotationY,\n          message: message\n        });\n      } else if (tmpAngle - this.speed <= angle && orientation === 1) {\n        //顺时针，角度越来越小\n        this.machine.rotation.y = angle;\n        this.animationUtil.renderOnly();\n        this.dispatchEvent({\n          type: this.event.rotationY,\n          message: message\n        });\n        return;\n      } else {\n        this.animationUtil.render(fn);\n      }\n    }.bind(this, message.angle, orientation);\n    fn(message.angle, orientation);\n  }\n\n  /**\r\n   * orientation = 1: 顺\r\n   * orientation = -1: 逆\r\n   */\n  rotationZ(message, orientation) {\n    if (!orientation) {\n      orientation = 1;\n    }\n    let angle = message.angle;\n    let fn = function (angle, orientation) {\n      this.machine.rotation.z = (this.angle += this.speed) * orientation;\n      console.debug('rotationZ', this.angle);\n      let _angle = this.angle + this.speed;\n      if (_angle >= angle) {\n        this.machine.rotation.z = angle * orientation;\n        this.animationUtil.renderOnly();\n        this.dispatchEvent({\n          type: this.event.rotationZ,\n          message: message\n        });\n        return;\n      }\n      if (this.angle <= angle) {\n        this.animationUtil.render(fn);\n      }\n    }.bind(this, angle, orientation);\n    fn(angle, orientation);\n  }\n  positionY(message, orientation) {\n    if (!orientation) {\n      orientation = AnimationUtil.positive;\n    }\n    this.machine.position.y = message.position * orientation;\n    this.dispatchEvent({\n      type: this.event.positionY,\n      message: message\n    });\n    this.animationUtil.renderOnly();\n  }\n}\nObject.assign(Machine.prototype, EventDispatcher.prototype);\nexport default Machine;","map":{"version":3,"names":["EventDispatcher","AnimationUtil","Machine","constructor","original","animationUtil","name","machine","speed","angle","event","rotationY","message","originalAngle","rotation","y","tmpAngle","orientation","fn","renderOnly","dispatchEvent","type","render","bind","rotationZ","z","console","debug","_angle","positionY","positive","position","Object","assign","prototype"],"sources":["/Users/jens/my-app/src/utils/Machine.js"],"sourcesContent":["import { EventDispatcher } from \"three\";\r\nimport AnimationUtil from '@/utils/AnimationUtil';\r\nclass Machine {\r\n\r\n    constructor(original, animationUtil, name) {\r\n        this.machine = original;\r\n        this.speed = 0.5;\r\n        this.angle = 0;//default angle.\r\n        this.animationUtil = animationUtil;\r\n        this.name = name;\r\n        this.event = {'rotationY': 'rotationY', 'rotationZ': 'rotationZ', 'positionY': 'positionY'};\r\n    }\r\n\r\n    /**\r\n     * orientation = 1: 顺\r\n     * orientation = -1: 逆\r\n     * 逆时针，角度越来越大。这里只往一个方向转，由大到小，然后，由小到大\r\n     */\r\n    rotationY(message) {\r\n        let originalAngle = this.machine.rotation.y, tmpAngle = this.machine.rotation.y, orientation;\r\n        if (message.angle > originalAngle){//当目标角度大于原来角度\r\n            orientation = -1;//逆时针\r\n        } else {\r\n            orientation = 1;//顺时针\r\n        }\r\n\r\n        let fn = function (angle, orientation) {\r\n            if (orientation === -1){//角度越来越大，逆时针\r\n                tmpAngle += this.speed;\r\n                this.machine.rotation.y = tmpAngle;\r\n            } else {\r\n                tmpAngle -= this.speed\r\n                this.machine.rotation.y =  tmpAngle;\r\n            }\r\n\r\n            if ((tmpAngle + this.speed) >= angle && orientation === -1){//逆时针，角度越来越大\r\n                this.machine.rotation.y = angle;\r\n                this.animationUtil.renderOnly();\r\n                this.dispatchEvent( { type: this.event.rotationY, message: message } );\r\n            } else if ((tmpAngle - this.speed) <= angle && orientation === 1){//顺时针，角度越来越小\r\n                this.machine.rotation.y = angle;\r\n                this.animationUtil.renderOnly();\r\n                this.dispatchEvent( { type: this.event.rotationY, message: message } );\r\n                return;\r\n            } else {\r\n                this.animationUtil.render(fn);\r\n            }\r\n               \r\n        }.bind(this, message.angle, orientation);\r\n\r\n        fn(message.angle, orientation);\r\n    }\r\n\r\n    /**\r\n     * orientation = 1: 顺\r\n     * orientation = -1: 逆\r\n     */\r\n    rotationZ(message, orientation) {\r\n        if (!orientation) {\r\n            orientation = 1;\r\n        }\r\n        let angle = message.angle;\r\n        let fn = function (angle, orientation) {\r\n            this.machine.rotation.z = (this.angle += this.speed) * orientation;\r\n            console.debug('rotationZ', this.angle);\r\n            let _angle = this.angle + this.speed;\r\n\r\n            if (_angle >= angle) {\r\n                this.machine.rotation.z = angle * orientation;\r\n                this.animationUtil.renderOnly();\r\n                this.dispatchEvent( { type: this.event.rotationZ, message: message} );\r\n                return;\r\n            }\r\n\r\n            if (this.angle <= angle) {\r\n                this.animationUtil.render(fn);\r\n            }\r\n        }.bind(this, angle, orientation);\r\n\r\n        fn(angle, orientation);\r\n    }\r\n\r\n    positionY(message, orientation){\r\n        if (!orientation){\r\n            orientation = AnimationUtil.positive;\r\n        }\r\n        this.machine.position.y = message.position * orientation;\r\n        this.dispatchEvent( { type: this.event.positionY, message: message} );\r\n        this.animationUtil.renderOnly();\r\n    }\r\n\r\n    \r\n\r\n}\r\nObject.assign(Machine.prototype, EventDispatcher.prototype);\r\n\r\nexport default Machine;"],"mappings":"AAAA,SAASA,eAAe,QAAQ,OAAO;AACvC,OAAOC,aAAa,MAAM,uBAAuB;AACjD,MAAMC,OAAO,CAAC;EAEVC,WAAWA,CAACC,QAAQ,EAAEC,aAAa,EAAEC,IAAI,EAAE;IACvC,IAAI,CAACC,OAAO,GAAGH,QAAQ;IACvB,IAAI,CAACI,KAAK,GAAG,GAAG;IAChB,IAAI,CAACC,KAAK,GAAG,CAAC,CAAC;IACf,IAAI,CAACJ,aAAa,GAAGA,aAAa;IAClC,IAAI,CAACC,IAAI,GAAGA,IAAI;IAChB,IAAI,CAACI,KAAK,GAAG;MAAC,WAAW,EAAE,WAAW;MAAE,WAAW,EAAE,WAAW;MAAE,WAAW,EAAE;IAAW,CAAC;EAC/F;;EAEA;AACJ;AACA;AACA;AACA;EACIC,SAASA,CAACC,OAAO,EAAE;IACf,IAAIC,aAAa,GAAG,IAAI,CAACN,OAAO,CAACO,QAAQ,CAACC,CAAC;MAAEC,QAAQ,GAAG,IAAI,CAACT,OAAO,CAACO,QAAQ,CAACC,CAAC;MAAEE,WAAW;IAC5F,IAAIL,OAAO,CAACH,KAAK,GAAGI,aAAa,EAAC;MAAC;MAC/BI,WAAW,GAAG,CAAC,CAAC,CAAC;IACrB,CAAC,MAAM;MACHA,WAAW,GAAG,CAAC,CAAC;IACpB;IAEA,IAAIC,EAAE,GAAG,UAAUT,KAAK,EAAEQ,WAAW,EAAE;MACnC,IAAIA,WAAW,KAAK,CAAC,CAAC,EAAC;QAAC;QACpBD,QAAQ,IAAI,IAAI,CAACR,KAAK;QACtB,IAAI,CAACD,OAAO,CAACO,QAAQ,CAACC,CAAC,GAAGC,QAAQ;MACtC,CAAC,MAAM;QACHA,QAAQ,IAAI,IAAI,CAACR,KAAK;QACtB,IAAI,CAACD,OAAO,CAACO,QAAQ,CAACC,CAAC,GAAIC,QAAQ;MACvC;MAEA,IAAKA,QAAQ,GAAG,IAAI,CAACR,KAAK,IAAKC,KAAK,IAAIQ,WAAW,KAAK,CAAC,CAAC,EAAC;QAAC;QACxD,IAAI,CAACV,OAAO,CAACO,QAAQ,CAACC,CAAC,GAAGN,KAAK;QAC/B,IAAI,CAACJ,aAAa,CAACc,UAAU,CAAC,CAAC;QAC/B,IAAI,CAACC,aAAa,CAAE;UAAEC,IAAI,EAAE,IAAI,CAACX,KAAK,CAACC,SAAS;UAAEC,OAAO,EAAEA;QAAQ,CAAE,CAAC;MAC1E,CAAC,MAAM,IAAKI,QAAQ,GAAG,IAAI,CAACR,KAAK,IAAKC,KAAK,IAAIQ,WAAW,KAAK,CAAC,EAAC;QAAC;QAC9D,IAAI,CAACV,OAAO,CAACO,QAAQ,CAACC,CAAC,GAAGN,KAAK;QAC/B,IAAI,CAACJ,aAAa,CAACc,UAAU,CAAC,CAAC;QAC/B,IAAI,CAACC,aAAa,CAAE;UAAEC,IAAI,EAAE,IAAI,CAACX,KAAK,CAACC,SAAS;UAAEC,OAAO,EAAEA;QAAQ,CAAE,CAAC;QACtE;MACJ,CAAC,MAAM;QACH,IAAI,CAACP,aAAa,CAACiB,MAAM,CAACJ,EAAE,CAAC;MACjC;IAEJ,CAAC,CAACK,IAAI,CAAC,IAAI,EAAEX,OAAO,CAACH,KAAK,EAAEQ,WAAW,CAAC;IAExCC,EAAE,CAACN,OAAO,CAACH,KAAK,EAAEQ,WAAW,CAAC;EAClC;;EAEA;AACJ;AACA;AACA;EACIO,SAASA,CAACZ,OAAO,EAAEK,WAAW,EAAE;IAC5B,IAAI,CAACA,WAAW,EAAE;MACdA,WAAW,GAAG,CAAC;IACnB;IACA,IAAIR,KAAK,GAAGG,OAAO,CAACH,KAAK;IACzB,IAAIS,EAAE,GAAG,UAAUT,KAAK,EAAEQ,WAAW,EAAE;MACnC,IAAI,CAACV,OAAO,CAACO,QAAQ,CAACW,CAAC,GAAG,CAAC,IAAI,CAAChB,KAAK,IAAI,IAAI,CAACD,KAAK,IAAIS,WAAW;MAClES,OAAO,CAACC,KAAK,CAAC,WAAW,EAAE,IAAI,CAAClB,KAAK,CAAC;MACtC,IAAImB,MAAM,GAAG,IAAI,CAACnB,KAAK,GAAG,IAAI,CAACD,KAAK;MAEpC,IAAIoB,MAAM,IAAInB,KAAK,EAAE;QACjB,IAAI,CAACF,OAAO,CAACO,QAAQ,CAACW,CAAC,GAAGhB,KAAK,GAAGQ,WAAW;QAC7C,IAAI,CAACZ,aAAa,CAACc,UAAU,CAAC,CAAC;QAC/B,IAAI,CAACC,aAAa,CAAE;UAAEC,IAAI,EAAE,IAAI,CAACX,KAAK,CAACc,SAAS;UAAEZ,OAAO,EAAEA;QAAO,CAAE,CAAC;QACrE;MACJ;MAEA,IAAI,IAAI,CAACH,KAAK,IAAIA,KAAK,EAAE;QACrB,IAAI,CAACJ,aAAa,CAACiB,MAAM,CAACJ,EAAE,CAAC;MACjC;IACJ,CAAC,CAACK,IAAI,CAAC,IAAI,EAAEd,KAAK,EAAEQ,WAAW,CAAC;IAEhCC,EAAE,CAACT,KAAK,EAAEQ,WAAW,CAAC;EAC1B;EAEAY,SAASA,CAACjB,OAAO,EAAEK,WAAW,EAAC;IAC3B,IAAI,CAACA,WAAW,EAAC;MACbA,WAAW,GAAGhB,aAAa,CAAC6B,QAAQ;IACxC;IACA,IAAI,CAACvB,OAAO,CAACwB,QAAQ,CAAChB,CAAC,GAAGH,OAAO,CAACmB,QAAQ,GAAGd,WAAW;IACxD,IAAI,CAACG,aAAa,CAAE;MAAEC,IAAI,EAAE,IAAI,CAACX,KAAK,CAACmB,SAAS;MAAEjB,OAAO,EAAEA;IAAO,CAAE,CAAC;IACrE,IAAI,CAACP,aAAa,CAACc,UAAU,CAAC,CAAC;EACnC;AAIJ;AACAa,MAAM,CAACC,MAAM,CAAC/B,OAAO,CAACgC,SAAS,EAAElC,eAAe,CAACkC,SAAS,CAAC;AAE3D,eAAehC,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}