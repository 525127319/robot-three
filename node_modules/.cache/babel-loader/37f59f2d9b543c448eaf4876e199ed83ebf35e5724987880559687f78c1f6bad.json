{"ast":null,"code":"import * as THREE from \"three\";\nimport FBXLoader from 'three-fbxloader-offical';\n// import AxiosHttp from '@/utils/AxiosHttp';\nimport OrbitControls from 'three-orbit-controls';\nimport ThreeStats from \"@/utils/ThreeStats\";\nlet _OrbitControls = OrbitControls(THREE);\nlet _font = null,\n  stats;\nclass AnimationUtil {\n  constructor() {\n    this.speed = 0.3;\n    this.loadFont();\n    this.initStat();\n    this.map = new Map();\n  }\n  resetAnimation(animations) {\n    animations = animations[0];\n    let tracks = animations.tracks;\n    let newAnimation = [];\n    //_animation.splice(0, _animation.length);\n    tracks.forEach(element => {\n      let a = new THREE.AnimationClip(element.name, -1, [element]);\n      newAnimation.push(a);\n    });\n    return newAnimation;\n  }\n  init(containerId, custom) {\n    //场景\n    this.scene = this.createSence();\n    if (custom) {\n      //全景3D相机 渲染器\n      //相机\n      this.camera = this.createCustomCamera({\n        fov: 30\n      });\n      //渲染器\n      this.renderer = this.createCustomRender(containerId, this.camera);\n    } else {\n      //相机\n      this.camera = this.createCamera({\n        fov: 45\n      });\n      //渲染器\n      this.renderer = this.createRender(containerId, this.camera);\n    }\n  }\n\n  /**\r\n   * controler: {x:, y:, z: } \r\n   * cameraConfig: {fov: }\r\n   */\n  createCamera(cameraConfig, controler) {\n    if (!cameraConfig) {\n      throw new Error('cameraConfig can\\'t be null');\n    } //fov\n    let camera = new THREE.PerspectiveCamera(cameraConfig.fov ? cameraConfig.fov : 45, 184 / 57, 1, 10000);\n    camera.position.set(0, 900, 1150);\n    let controls = new _OrbitControls(camera); //轨道控制器\n    if (controler) {\n      controls.target.set(0, controler.y ? controler.y : 300, 0); //可以通过参数传进来，暂定\n    }\n    controls.enableZoom = false;\n    controls.update();\n    return camera;\n  }\n\n  /**\r\n   * 创建scene并加进一丝光\r\n   * \r\n   */\n  createSence() {\n    let scene = new THREE.Scene();\n    let light = new THREE.HemisphereLight(0xffffff, 0x444444);\n    light.position.set(100, 200, 0);\n    scene.add(light);\n    return scene;\n  }\n  createRender(containerId) {\n    let width = 0;\n    let height = 0;\n    if (window.innerWidth > 3000) {\n      width = 3680;\n      height = 1140;\n    } else if (window.innerWidth < 2000) {\n      width = 1840;\n      height = 570;\n    } else if (window.innerWidth < 3000 && window.innerWidth > 2000) {\n      width = 2453;\n      height = 728;\n    }\n    let renderer = new THREE.WebGLRenderer({\n      antialias: true,\n      alpha: true\n    });\n    renderer.setPixelRatio(window.devicePixelRatio);\n    renderer.setSize(width, height);\n    // renderer.shadowMap.enabled = true;\n    let animation = document.getElementById(containerId);\n    animation.appendChild(renderer.domElement);\n    let _fn = function () {\n      this.camera.aspect = 184 / 57;\n      this.camera.updateProjectionMatrix();\n      this.renderer.setSize(width, height);\n    }.bind(this);\n    // window.addEventListener('resize', _fn, false);\n    return renderer;\n  }\n\n  //物流看板渲染器\n  createCustomRender(containerId) {\n    let width;\n    let height;\n    if (window.innerWidth > 2570) {\n      width = 3680;\n      height = 1680;\n    } else if (window.innerWidth < 2500) {\n      width = 1840;\n      height = 840;\n    } else if (window.innerWidth < 3000 && window.innerWidth > 2500) {\n      width = 2453;\n      height = 1120;\n    }\n    let renderer = new THREE.WebGLRenderer({\n      antialias: true,\n      alpha: true\n    });\n    renderer.setPixelRatio(window.devicePixelRatio);\n    renderer.setSize(width, height);\n    let animation = document.getElementById(containerId);\n    animation.appendChild(renderer.domElement);\n    let _fn = () => {\n      this.camera.aspect = width / height;\n      this.camera.updateProjectionMatrix();\n      renderer.setSize(width, height);\n    };\n    window.addEventListener('resize', _fn, false);\n    return renderer;\n  }\n\n  //物流看板相机\n  createCustomCamera(cameraConfig, controler) {\n    if (!cameraConfig) {\n      throw new Error('cameraConfig can\\'t be null');\n    } //fov\n    let camera = new THREE.PerspectiveCamera(cameraConfig.fov ? cameraConfig.fov : 45, 16 / 9, 1, 10000);\n    camera.position.set(0, 600, 1300);\n    let controls = new _OrbitControls(camera); //轨道控制器\n    if (controler) {\n      controls.target.set(0, controler.y ? controler.y : 300, 0); //可以通过参数传进来，暂定\n    }\n    controls.enableZoom = false;\n    controls.update();\n    return camera;\n  }\n  loadFbx(url) {\n    let scene = this.scene;\n    let promise = new Promise((resolve, reject) => {\n      let loader = new FBXLoader();\n      loader.load(AxiosHttp.getBaseURL() + url, object => {\n        scene.add(object);\n        resolve(object);\n      }, () => {}, error => {\n        reject(error);\n      });\n    });\n    return promise;\n  }\n  loadFont() {\n    if (_font) {\n      return Promise.resolve(_font);\n    }\n    let promise = new Promise((resolve, reject) => {\n      let loader = new THREE.FontLoader();\n      loader.load('src/font/ZH_CN.json', font => {\n        _font = font;\n        resolve(font);\n      });\n    });\n    return promise;\n  }\n\n  /**\r\n       * 生成3D文字， 输出是字体模型\r\n       * \r\n       * @param {*} word 输出的文字\r\n       * @param {*} option 字体配置选项\r\n       */\n  generateFont(word, option) {\n    if (!word) throw new Error('word can\\' be empty!');\n    let _option = {\n      size: 40,\n      height: 10,\n      curveSegments: 5\n    };\n    if (option) _option = Object.assign(_option, option);\n    return this.loadFont().then(font => {\n      _option.font = font;\n      var geometry = new THREE.TextGeometry(word, _option);\n      geometry.computeBoundingBox();\n      var materials = [new THREE.MeshBasicMaterial({\n        color: 0XFF0000,\n        overdraw: 0.5\n      }), new THREE.MeshBasicMaterial({\n        color: 0x000000,\n        overdraw: 0.5\n      })];\n      return new THREE.Mesh(geometry, materials);\n    });\n  }\n  getAnimation(object) {\n    return null;\n  }\n  render(fn) {\n    this.renderer.render(this.scene, this.camera);\n    //stats.update();\n    requestAnimationFrame(fn);\n  }\n  renderOnly() {\n    //stats.update();\n    this.renderer.render(this.scene, this.camera);\n  }\n  initStat() {\n    stats = new ThreeStats().getInstance();\n    stats.setMode(0); // 0: fps, 1: ms\n\n    // Align top-left\n    stats.domElement.style.position = 'absolute';\n    stats.domElement.style.left = '0px';\n    stats.domElement.style.top = '0px';\n\n    // document.body.appendChild(stats.domElement);\n  }\n  getMeshByName(object, name) {\n    let map = null;\n    if (!this.map.has(object.id)) {\n      map = new Map();\n      this.map.set(object.id, map);\n    } else {\n      map = this.map.get(object.id);\n    }\n    if (map.has(name)) return map.get(name);\n    return this.getMesh(object.children, name, map);\n  }\n  getMesh(children, name, map) {\n    for (let index = 0; index < children.length; index++) {\n      const _mesh = children[index];\n      if (!map.has(_mesh.name)) map.set(_mesh.name, _mesh);\n      if (_mesh.name === name) {\n        return _mesh;\n      } else if ('Group' === _mesh.type) {\n        let m = this.getMesh(_mesh.children, name, map);\n        if (m && m.name === name) {\n          return m;\n        }\n      }\n    }\n  }\n}\nAnimationUtil.positive = 1; //顺时针\nAnimationUtil.negative = -1; //逆时针\n\nexport default AnimationUtil;","map":{"version":3,"names":["THREE","FBXLoader","OrbitControls","ThreeStats","_OrbitControls","_font","stats","AnimationUtil","constructor","speed","loadFont","initStat","map","Map","resetAnimation","animations","tracks","newAnimation","forEach","element","a","AnimationClip","name","push","init","containerId","custom","scene","createSence","camera","createCustomCamera","fov","renderer","createCustomRender","createCamera","createRender","cameraConfig","controler","Error","PerspectiveCamera","position","set","controls","target","y","enableZoom","update","Scene","light","HemisphereLight","add","width","height","window","innerWidth","WebGLRenderer","antialias","alpha","setPixelRatio","devicePixelRatio","setSize","animation","document","getElementById","appendChild","domElement","_fn","aspect","updateProjectionMatrix","bind","addEventListener","loadFbx","url","promise","Promise","resolve","reject","loader","load","AxiosHttp","getBaseURL","object","error","FontLoader","font","generateFont","word","option","_option","size","curveSegments","Object","assign","then","geometry","TextGeometry","computeBoundingBox","materials","MeshBasicMaterial","color","overdraw","Mesh","getAnimation","render","fn","requestAnimationFrame","renderOnly","getInstance","setMode","style","left","top","getMeshByName","has","id","get","getMesh","children","index","length","_mesh","type","m","positive","negative"],"sources":["/Users/jens/my-app/src/utils/AnimationUtil.js"],"sourcesContent":["import * as THREE from \"three\";\r\nimport FBXLoader from 'three-fbxloader-offical';\r\n// import AxiosHttp from '@/utils/AxiosHttp';\r\nimport OrbitControls from 'three-orbit-controls';\r\nimport ThreeStats from \"@/utils/ThreeStats\";\r\n\r\nlet _OrbitControls = OrbitControls(THREE);\r\nlet _font = null, stats;\r\nclass AnimationUtil{\r\n\r\n    constructor(){\r\n        this.speed = 0.3;\r\n        this.loadFont();\r\n        this.initStat();\r\n        this.map = new Map();\r\n    }\r\n\r\n    resetAnimation(animations){\r\n        animations = animations[0];\r\n        let tracks = animations.tracks;\r\n        let newAnimation = [];\r\n        //_animation.splice(0, _animation.length);\r\n        tracks.forEach(element => {\r\n            let a = new THREE.AnimationClip(element.name, -1, [element]);\r\n            newAnimation.push(a);\r\n        });\r\n        return newAnimation;\r\n    }\r\n\r\n    init(containerId,custom){\r\n        //场景\r\n        this.scene = this.createSence();\r\n        if(custom){ //全景3D相机 渲染器\r\n            //相机\r\n            this.camera = this.createCustomCamera({fov:30});\r\n            //渲染器\r\n            this.renderer = this.createCustomRender(containerId, this.camera);\r\n        }else{\r\n            //相机\r\n            this.camera = this.createCamera({fov: 45});\r\n            //渲染器\r\n            this.renderer = this.createRender(containerId, this.camera);\r\n        }\r\n       \r\n    }\r\n\r\n    /**\r\n     * controler: {x:, y:, z: } \r\n     * cameraConfig: {fov: }\r\n     */\r\n    createCamera(cameraConfig, controler){\r\n        if (!cameraConfig){\r\n            throw new Error('cameraConfig can\\'t be null');\r\n        }//fov\r\n        let camera = new THREE.PerspectiveCamera(cameraConfig.fov? cameraConfig.fov :45, 184 / 57, 1, 10000);\r\n        camera.position.set(0, 900,1150);\r\n        let controls = new _OrbitControls(camera);//轨道控制器\r\n        if (controler){\r\n            controls.target.set(0, controler.y ? controler.y : 300, 0);//可以通过参数传进来，暂定\r\n        }\r\n        controls.enableZoom = false;\r\n        controls.update();\r\n        return camera;\r\n    }\r\n\r\n    /**\r\n     * 创建scene并加进一丝光\r\n     * \r\n     */\r\n    createSence(){\r\n        let scene = new THREE.Scene();\r\n        let light = new THREE.HemisphereLight(0xffffff, 0x444444);\r\n        light.position.set(100, 200, 0);\r\n        scene.add(light);\r\n        return scene;\r\n    }\r\n\r\n    createRender(containerId){\r\n        let width=0;\r\n        let height=0;\r\n        if(window.innerWidth>3000){\r\n            width=3680\r\n            height=1140\r\n        }else if(window.innerWidth<2000){\r\n            width=1840\r\n            height=570\r\n        }else if(window.innerWidth<3000&&window.innerWidth>2000){\r\n            width=2453\r\n            height=728\r\n        }\r\n        let renderer = new THREE.WebGLRenderer({ antialias: true, alpha:true });\r\n        renderer.setPixelRatio(window.devicePixelRatio);\r\n \r\n        renderer.setSize(width, height);\r\n        // renderer.shadowMap.enabled = true;\r\n        let animation = document.getElementById(containerId);\r\n        animation.appendChild(renderer.domElement);\r\n        let _fn = function(){\r\n            this.camera.aspect = 184 /57;\r\n            this.camera.updateProjectionMatrix();\r\n            this.renderer.setSize(width, height);\r\n        }.bind(this);\r\n        // window.addEventListener('resize', _fn, false);\r\n        return renderer;\r\n    }\r\n\r\n    //物流看板渲染器\r\n    createCustomRender(containerId){\r\n        let width;\r\n        let height;\r\n        if(window.innerWidth>2570){\r\n            width=3680\r\n            height=1680\r\n        }else if(window.innerWidth<2500){\r\n            width=1840\r\n            height=840\r\n        }else if(window.innerWidth<3000&&window.innerWidth>2500){\r\n            width=2453\r\n            height=1120\r\n        }\r\n        let renderer = new THREE.WebGLRenderer({ antialias: true, alpha:true });\r\n        renderer.setPixelRatio(window.devicePixelRatio);\r\n \r\n        renderer.setSize(width, height);\r\n        let animation = document.getElementById(containerId);\r\n        animation.appendChild(renderer.domElement);\r\n        let _fn = ()=>{\r\n            this.camera.aspect = width / height;\r\n            this.camera.updateProjectionMatrix();\r\n             renderer.setSize(width, height);\r\n        };\r\n       \r\n        window.addEventListener('resize', _fn, false);\r\n        return renderer;\r\n    }\r\n\r\n    //物流看板相机\r\n    createCustomCamera(cameraConfig, controler){\r\n        if (!cameraConfig){\r\n            throw new Error('cameraConfig can\\'t be null');\r\n        }//fov\r\n        let camera = new THREE.PerspectiveCamera(cameraConfig.fov? cameraConfig.fov :45, 16 / 9, 1, 10000);\r\n        camera.position.set(0, 600,1300);\r\n        let controls = new _OrbitControls(camera);//轨道控制器\r\n        if (controler){\r\n            controls.target.set(0, controler.y ? controler.y : 300, 0);//可以通过参数传进来，暂定\r\n        }\r\n        controls.enableZoom = false;\r\n        controls.update();\r\n        return camera;\r\n    }\r\n\r\n    loadFbx(url){\r\n        let scene = this.scene;\r\n        let promise = new Promise((resolve, reject)=>{\r\n            let loader = new FBXLoader();\r\n            loader.load(AxiosHttp.getBaseURL()+url, (object) => {\r\n                scene.add(object);\r\n                resolve(object);\r\n            }, ()=>{}, (error)=>{\r\n                reject(error);\r\n            });\r\n        });\r\n       \r\n        return promise;\r\n    }\r\n\r\n    loadFont(){\r\n        if (_font){\r\n            return Promise.resolve(_font);\r\n        }\r\n        let promise = new Promise((resolve, reject)=>{\r\n            let loader = new THREE.FontLoader();\r\n            loader.load('src/font/ZH_CN.json', (font)=>{\r\n                _font = font;\r\n                resolve(font);\r\n            });\r\n        });\r\n        return promise;\r\n    }\r\n\r\n/**\r\n     * 生成3D文字， 输出是字体模型\r\n     * \r\n     * @param {*} word 输出的文字\r\n     * @param {*} option 字体配置选项\r\n     */\r\n    generateFont(word, option) {\r\n        if (!word) throw new Error('word can\\' be empty!');\r\n\r\n        let _option = {\r\n            size: 40,\r\n            height: 10,\r\n            curveSegments: 5\r\n        };\r\n        if (option)\r\n            _option = Object.assign(_option, option);\r\n\r\n        return this.loadFont().then(font => {\r\n            _option.font = font;\r\n            var geometry = new THREE.TextGeometry(word, _option);\r\n            geometry.computeBoundingBox()\r\n            var materials = [\r\n                new THREE.MeshBasicMaterial({ color: 0XFF0000, overdraw: 0.5 }),\r\n                new THREE.MeshBasicMaterial( { color: 0x000000, overdraw: 0.5 } )\r\n            ];\r\n            return new THREE.Mesh(geometry, materials);\r\n        });\r\n    }\r\n\r\n    getAnimation(object){\r\n        return null;\r\n    }\r\n\r\n    render(fn){\r\n        this.renderer.render(this.scene, this.camera);\r\n        //stats.update();\r\n        requestAnimationFrame(fn);\r\n    }\r\n\r\n    renderOnly(){\r\n        //stats.update();\r\n        this.renderer.render(this.scene, this.camera);\r\n    }\r\n\r\n    initStat(){\r\n            stats = new ThreeStats().getInstance();\r\n            stats.setMode(0); // 0: fps, 1: ms\r\n    \r\n            // Align top-left\r\n            stats.domElement.style.position = 'absolute';\r\n            stats.domElement.style.left = '0px';\r\n            stats.domElement.style.top = '0px';\r\n    \r\n            // document.body.appendChild(stats.domElement);\r\n    }\r\n\r\n    getMeshByName(object, name){\r\n        let map = null;\r\n        if (!this.map.has(object.id)){\r\n            map = new Map();\r\n            this.map.set(object.id, map);\r\n        } else {\r\n            map = this.map.get(object.id);\r\n        }\r\n        if (map.has(name))\r\n            return map.get(name);\r\n        return this.getMesh(object.children, name, map);\r\n    }\r\n\r\n    getMesh(children, name, map){\r\n        for (let index = 0; index < children.length; index++) {\r\n            const _mesh = children[index];\r\n            if (!map.has(_mesh.name))\r\n                map.set(_mesh.name, _mesh);\r\n            if (_mesh.name === name){\r\n                return _mesh;\r\n            } else if ('Group' === _mesh.type){\r\n                let m = this.getMesh(_mesh.children, name, map);\r\n                if (m  && m.name === name){\r\n                    return m;\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n}\r\n\r\nAnimationUtil.positive = 1;//顺时针\r\nAnimationUtil.negative = -1;//逆时针\r\n\r\nexport default AnimationUtil;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}