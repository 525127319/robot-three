{"ast":null,"code":"//测试摄象头\nimport Equipment from './Equipment';\nlet testers = [\n//默认往逆时针\n{\n  'name': 'M1',\n  'angle': 6.1,\n  'count': 0,\n  'event': 'tester',\n  'testedEvent': 'testedEvent'\n},\n//默认左上角第一个箱子\n{\n  'name': 'M2',\n  'angle': 5.6,\n  'count': 0,\n  'event': 'tester',\n  'testedEvent': 'testedEvent'\n}, {\n  'name': 'M3',\n  'angle': 4.4,\n  'count': 0,\n  'event': 'tester',\n  'testedEvent': 'testedEvent'\n}, {\n  'name': 'M4',\n  'angle': 3.8,\n  'count': 0,\n  'event': 'tester',\n  'testedEvent': 'testedEvent'\n}, {\n  'name': 'M5',\n  'angle': 3.2,\n  'count': 0,\n  'event': 'tester',\n  'testedEvent': 'testedEvent'\n}, {\n  'name': 'M6',\n  'angle': 2.5,\n  'count': 0,\n  'event': 'tester',\n  'testedEvent': 'testedEvent'\n}, {\n  'name': 'M7',\n  'angle': 1.2,\n  'count': 0,\n  'event': 'tester',\n  'testedEvent': 'testedEvent'\n}, {\n  'name': 'M8',\n  'angle': 0.6,\n  'count': 0,\n  'event': 'tester',\n  'testedEvent': 'testedEvent'\n}];\nlet rails = [{\n  'name': 'loadRail2',\n  angle: 4.8\n},\n//发布四轴机器人2抓取事件\n{\n  'name': 'loadRail1',\n  angle: 5.2\n},\n//发布四轴机器人2抓取事件\n{\n  'name': 'downRail1',\n  angle: 1.7,\n  index: 1,\n  'event': 'downEvent' /**下料事件*/\n}, {\n  'name': 'downRail2',\n  angle: 2.0,\n  index: 2,\n  'event': 'downEvent' /**下料事件*/\n}, {\n  'name': 'downRail3',\n  angle: 1.8,\n  index: 3,\n  'event': 'downEvent' /**下料事件*/\n}];\nlet map = new Map();\ntesters.forEach(tester => {\n  map.set(tester.name, tester);\n});\nrails.forEach(rail => {\n  map.set(rail.name, rail);\n});\nlet machine = null,\n  smtAnimation = null,\n  index = 0;\nclass Machine2 extends Equipment {\n  constructor(_smtAnimation) {\n    machine = _smtAnimation.getMachine('四轴机器人2');\n    super(machine);\n    smtAnimation = _smtAnimation;\n    this.addEvent();\n  }\n\n  //移到测试箱\n  moveToTester(tester_name) {\n    let t = map.get(tester_name.target);\n    super.rotationY({\n      angle: t.angle,\n      action: t.event,\n      name: t.name\n    });\n    if (index >= testers.length) index = 0;\n  }\n  toLoadRail1(metatrial, tester_name) {\n    //machine.rotationY({angle: 4.6});\n    let _t = map.get('loadRail1');\n    super.toLoadRail1(metatrial, _t, tester_name, tester_name => {\n      this.moveToTester(tester_name);\n      metatrial.reduce();\n    });\n  }\n  toLoadRail2(metatrial, tester_name) {\n    let _t = map.get('loadRail2');\n    super.toLoadRail2(metatrial, _t, tester_name, tester_name => {\n      this.moveToTester(tester_name);\n      metatrial.reduce();\n    });\n  }\n  moToRail(message) {\n    // 去到tester取料,放到对应的轨道上\n\n    let name = message;\n\n    // let _index = null;\n    let _t = map.get(name.start);\n    // if(message.result === 4) {\n    //     _index = 3\n    // } else if(message.result === 5) {\n    //     _index = 2\n    // } else if(message.result === 6) {\n    //     _index = 4\n    // }\n    machine.rotationY({\n      angle: _t.angle\n    }); //去到tester取料，\n\n    setTimeout(() => {\n      // 等取料动作完成，再移动到下料轨道\n      // let _rail = rails[_index];\n      let _rail = rails[name.target * 1 + 1];\n      machine.rotationY({\n        angle: _rail.angle,\n        action: _rail.event,\n        message\n      });\n    }, 500);\n  }\n  addEvent() {\n    let _metarial24 = smtAnimation.getMetrail('轨道2物料4');\n    let _metarial14 = smtAnimation.getMetrail('轨道1物料4');\n    let _metarial25 = smtAnimation.getMetrail('轨道2物料5');\n    let _metarial15 = smtAnimation.getMetrail('轨道1物料5');\n    let _defectiveMetarial2 = smtAnimation.getMetrail('灰色物料2');\n    let _defectiveMetarial3 = smtAnimation.getMetrail('灰色物料3');\n    let _machineMetarial2 = smtAnimation.getMetrail('四轴2上物料');\n    _machineMetarial2.disable();\n    machine.addEventListener(machine.event.rotationY, event => {\n      let message = event.message;\n      let action = message.action;\n      // let name = message.name;\n      // let _t = map.get(name);\n      _machineMetarial2.block();\n      if ('tester' === action) {\n        //监听物料到达下一个出口\n        _machineMetarial2.disable();\n        // setTimeout(()=>{\n        //     machine.rotationY({angle: _t.angle});//去到tester取料，\n        //     let _index = index % 2 === 0 ? 2 : 3;\n        //     let _rail = rails[_index];\n        //     machine.rotationY({angle: _rail.angle, action: _rail.event, railIndex: _index});\n        //\n        // }, 500);\n      } else if ('downEvent' === action) {\n        //下料事件\n        let mess = event.message;\n        _machineMetarial2.disable();\n        // let railIndex = message.railIndex;\n        // let _rail = rails[railIndex];\n        // let randomNum = Math.round(Math.random());\n        if (mess.message.target === 2) {\n          _metarial24.block();\n          _metarial24.move(_metarial24.distance.smtmetarial4To5, 4.5); //滑到下一个上料口\n        } else if (mess.message.target === 1) {\n          // if(randomNum) {\n          _metarial14.block();\n          _metarial14.move(_metarial14.distance.smtmetarial4To5, 4.5); //滑到下一个上料口\n        } else {\n          _defectiveMetarial2.block();\n          _defectiveMetarial2.move(_defectiveMetarial2.distance.smtdefectivemetarial2To3, 4.5); //滑到下一个上料口\n        }\n        // }\n      }\n    });\n\n    // //监听第4块物料到达位置，如果到了，第5个物料+1，第4块物料重置，并不显视\n    _metarial24.addEventListener(_metarial24.event.arriveTarget, event => {\n      _metarial25.block();\n      _metarial24.disable();\n      _metarial24.reset();\n    });\n    _metarial14.addEventListener(_metarial14.event.arriveTarget, event => {\n      _metarial15.block();\n      _metarial14.disable();\n      _metarial14.reset();\n    });\n    _defectiveMetarial2.addEventListener(_defectiveMetarial2.event.arriveTarget, event => {\n      _defectiveMetarial3.block();\n      _defectiveMetarial2.disable();\n      _defectiveMetarial2.reset();\n    });\n  }\n}\nexport default Machine2;","map":{"version":3,"names":["Equipment","testers","rails","angle","index","map","Map","forEach","tester","set","name","rail","machine","smtAnimation","Machine2","constructor","_smtAnimation","getMachine","addEvent","moveToTester","tester_name","t","get","target","rotationY","action","event","length","toLoadRail1","metatrial","_t","reduce","toLoadRail2","moToRail","message","start","setTimeout","_rail","_metarial24","getMetrail","_metarial14","_metarial25","_metarial15","_defectiveMetarial2","_defectiveMetarial3","_machineMetarial2","disable","addEventListener","block","mess","move","distance","smtmetarial4To5","smtdefectivemetarial2To3","arriveTarget","reset"],"sources":["/Users/jens/my-app/src/Smt/components/SmtDeviceStatus/Machine2.js"],"sourcesContent":["//测试摄象头\r\nimport Equipment from './Equipment';\r\nlet testers = [//默认往逆时针\r\n    {'name': 'M1', 'angle': 6.1, 'count': 0, 'event': 'tester', 'testedEvent':'testedEvent'},//默认左上角第一个箱子\r\n    {'name': 'M2', 'angle': 5.6, 'count': 0, 'event': 'tester', 'testedEvent':'testedEvent'},\r\n    {'name': 'M3', 'angle': 4.4, 'count': 0, 'event': 'tester', 'testedEvent':'testedEvent'},\r\n    {'name': 'M4', 'angle': 3.8, 'count': 0, 'event': 'tester', 'testedEvent':'testedEvent'},\r\n    {'name': 'M5', 'angle': 3.2, 'count': 0, 'event': 'tester', 'testedEvent':'testedEvent'},\r\n    {'name': 'M6', 'angle': 2.5, 'count': 0, 'event': 'tester', 'testedEvent':'testedEvent'},\r\n    {'name': 'M7', 'angle': 1.2, 'count': 0, 'event': 'tester', 'testedEvent':'testedEvent'},\r\n    {'name': 'M8', 'angle': 0.6, 'count': 0, 'event': 'tester', 'testedEvent':'testedEvent'},\r\n\r\n];\r\n\r\nlet rails = [\r\n    { 'name': 'loadRail2', angle: 4.8 },//发布四轴机器人2抓取事件\r\n    { 'name': 'loadRail1', angle: 5.2 },//发布四轴机器人2抓取事件\r\n    { 'name': 'downRail1', angle: 1.7, index: 1, 'event': 'downEvent'/**下料事件*/ },\r\n    { 'name': 'downRail2', angle: 2.0, index: 2, 'event': 'downEvent', /**下料事件*/ },\r\n    { 'name': 'downRail3', angle: 1.8, index: 3, 'event': 'downEvent'/**下料事件*/ },\r\n];\r\nlet map = new Map();\r\ntesters.forEach(tester=>{\r\n    map.set(tester.name, tester);\r\n});\r\n\r\nrails.forEach(rail => {\r\n    map.set(rail.name, rail);\r\n});\r\n\r\nlet machine = null, smtAnimation = null, index = 0;\r\nclass Machine2 extends Equipment {\r\n    constructor(_smtAnimation) {\r\n        machine = _smtAnimation.getMachine('四轴机器人2');\r\n        super(machine);\r\n        smtAnimation = _smtAnimation;\r\n        this.addEvent();\r\n    }\r\n\r\n    //移到测试箱\r\n    moveToTester(tester_name){\r\n        let t = map.get(tester_name.target);\r\n        super.rotationY({angle: t.angle, action: t.event, name: t.name});\r\n        if (index >= testers.length) index = 0;\r\n       \r\n        \r\n    }\r\n\r\n    toLoadRail1(metatrial,tester_name) {\r\n        //machine.rotationY({angle: 4.6});\r\n        let _t = map.get('loadRail1');\r\n        super.toLoadRail1(metatrial, _t, tester_name, (tester_name)=>{\r\n            this.moveToTester(tester_name);\r\n            metatrial.reduce();\r\n        });\r\n       \r\n    }\r\n\r\n    toLoadRail2(metatrial,tester_name) {\r\n        let _t = map.get('loadRail2');\r\n        super.toLoadRail2(metatrial, _t, tester_name, (tester_name)=>{\r\n            this.moveToTester(tester_name);\r\n            metatrial.reduce();\r\n          \r\n        });\r\n       \r\n    }\r\n\r\n    moToRail(message) {// 去到tester取料,放到对应的轨道上\r\n      \r\n        let name = message;\r\n\r\n        // let _index = null;\r\n        let _t = map.get(name.start);\r\n        // if(message.result === 4) {\r\n        //     _index = 3\r\n        // } else if(message.result === 5) {\r\n        //     _index = 2\r\n        // } else if(message.result === 6) {\r\n        //     _index = 4\r\n        // }\r\n        machine.rotationY({angle: _t.angle});//去到tester取料，\r\n\r\n        setTimeout(() => {// 等取料动作完成，再移动到下料轨道\r\n            // let _rail = rails[_index];\r\n            let _rail = rails[(name.target)*1+1];\r\n            machine.rotationY({angle: _rail.angle, action: _rail.event,message});\r\n        },500);\r\n    }\r\n\r\n    addEvent() {\r\n        let _metarial24 = smtAnimation.getMetrail('轨道2物料4');\r\n        let _metarial14 = smtAnimation.getMetrail('轨道1物料4');\r\n        let _metarial25 = smtAnimation.getMetrail('轨道2物料5');\r\n        let _metarial15 = smtAnimation.getMetrail('轨道1物料5');\r\n        let _defectiveMetarial2 = smtAnimation.getMetrail('灰色物料2');\r\n        let _defectiveMetarial3 = smtAnimation.getMetrail('灰色物料3');\r\n        let _machineMetarial2 = smtAnimation.getMetrail('四轴2上物料');\r\n        _machineMetarial2.disable();\r\n\r\n        machine.addEventListener(machine.event.rotationY, event => {\r\n            let message = event.message;\r\n            let action = message.action;\r\n            // let name = message.name;\r\n            // let _t = map.get(name);\r\n            _machineMetarial2.block();\r\n\r\n            if ('tester' === action) {//监听物料到达下一个出口\r\n                _machineMetarial2.disable();\r\n                // setTimeout(()=>{\r\n                //     machine.rotationY({angle: _t.angle});//去到tester取料，\r\n                //     let _index = index % 2 === 0 ? 2 : 3;\r\n                //     let _rail = rails[_index];\r\n                //     machine.rotationY({angle: _rail.angle, action: _rail.event, railIndex: _index});\r\n                //\r\n                // }, 500);\r\n\r\n            } else if ('downEvent' === action){//下料事件\r\n                let mess=event.message;\r\n                _machineMetarial2.disable();\r\n                // let railIndex = message.railIndex;\r\n                // let _rail = rails[railIndex];\r\n                // let randomNum = Math.round(Math.random());\r\n                if (mess.message.target === 2) {\r\n                    _metarial24.block();\r\n                    _metarial24.move(_metarial24.distance.smtmetarial4To5,4.5);//滑到下一个上料口\r\n                } else if(mess.message.target === 1) {\r\n                    // if(randomNum) {\r\n                    _metarial14.block();\r\n                    _metarial14.move(_metarial14.distance.smtmetarial4To5,4.5);//滑到下一个上料口\r\n                } else {\r\n                    _defectiveMetarial2.block();\r\n                    _defectiveMetarial2.move(_defectiveMetarial2.distance.smtdefectivemetarial2To3,4.5);//滑到下一个上料口\r\n                }\r\n                // }\r\n            }\r\n        });\r\n\r\n        // //监听第4块物料到达位置，如果到了，第5个物料+1，第4块物料重置，并不显视\r\n        _metarial24.addEventListener(_metarial24.event.arriveTarget, event => {\r\n            _metarial25.block();\r\n            _metarial24.disable();\r\n            _metarial24.reset();\r\n        });\r\n\r\n        _metarial14.addEventListener(_metarial14.event.arriveTarget, event => {\r\n            _metarial15.block();\r\n            _metarial14.disable();\r\n            _metarial14.reset();\r\n        });\r\n\r\n        _defectiveMetarial2.addEventListener(_defectiveMetarial2.event.arriveTarget, event => {\r\n            _defectiveMetarial3.block();\r\n            _defectiveMetarial2.disable();\r\n            _defectiveMetarial2.reset();\r\n        });\r\n    }\r\n}\r\n\r\nexport default Machine2;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}