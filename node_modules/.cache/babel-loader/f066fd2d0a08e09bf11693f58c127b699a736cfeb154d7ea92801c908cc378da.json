{"ast":null,"code":"//测试摄象头\nimport Equipment from './Equipment';\nlet rails = [{\n  'name': 'loadRail2',\n  angle: -0.2\n},\n//发布四轴机器人3抓取事件\n{\n  'name': 'loadRail1',\n  angle: 0.2\n},\n//发布四轴机器人3抓取事件\n{\n  'name': 'loadRail3',\n  angle: 0\n},\n//发布四轴机器人3抓取事件\n{\n  'name': 'downRail2',\n  angle: -1.5,\n  index: 1,\n  'event': 'toFinish' /**下料事件*/\n}, {\n  'name': 'downRail1',\n  angle: 1.5,\n  index: 2,\n  'event': 'toDefectiveFinish' /**下料事件*/\n}];\nlet map = new Map();\nrails.forEach(rail => {\n  map.set(rail.name, rail);\n});\nlet machine = null,\n  smtAnimation = null,\n  index = 0;\nclass Machine3 extends Equipment {\n  constructor(_smtAnimation) {\n    machine = _smtAnimation.getMachine('白色机器人');\n    super(machine);\n    smtAnimation = _smtAnimation;\n    this.addEvent();\n  }\n\n  //让6轴机器人转到下料口\n  toNextStation(tester_name) {\n    if (index === 1 || index === 2) {\n      index = 3;\n    } else {\n      index = 4;\n    }\n    let t = rails[index];\n    super.rotationY({\n      angle: t.angle,\n      action: t.event,\n      name: t.name\n    }); //发布事件，让下\n    // if (index === 2) {//切换轨道\n    //     index = 3;\n    // } else {\n    //     index = 2;\n    // }\n  }\n  toLoadRail1(metatrial, tester_name) {\n    index = 1;\n    let _t = map.get('loadRail1');\n    this.getMetarial(_t, metatrial);\n  }\n  toLoadRail2(metatrial, tester_name) {\n    index = 2;\n    let _t = map.get('loadRail2');\n    this.getMetarial(_t, metatrial);\n  }\n  toLoadRail3(metatrial, tester_name) {\n    index = 3;\n    let _t = map.get('loadRail3');\n    this.getMetarial(_t, metatrial, tester_name);\n  }\n  getMetarial(_t, metatrial, tester_name) {\n    this.rotationY({\n      angle: _t.angle,\n      action: _t.event\n    });\n    this.rotationZ({\n      angle: 0.3\n    }, 1);\n    const _this = this;\n    setTimeout(() => {\n      //做一个取料动作\n      _this.rotationZ({\n        angle: 0.1\n      }, -1);\n      metatrial.reduce();\n      this.toNextStation(tester_name);\n    }, 500);\n  }\n  addEvent() {\n    let _metarial25 = smtAnimation.getMetrail('轨道2物料5');\n    let _metarial15 = smtAnimation.getMetrail('轨道1物料5');\n    let _metarial28 = smtAnimation.getMetrail('完成绿色物料');\n    let _metarial18 = smtAnimation.getMetrail('不良灰色物料完成');\n    let _machineMetarial3 = smtAnimation.getMetrail('夹起的物料');\n    _metarial25.disable();\n    _machineMetarial3.disable();\n    _metarial28.disable();\n    _metarial18.disable();\n    machine.addEventListener(machine.event.rotationY, event => {\n      let message = event.message;\n      let action = message.action;\n      _metarial28.disable();\n      _metarial18.disable();\n      _machineMetarial3.block();\n      if ('toFinish' === action) {\n        //监听物料到达下一个出口\n        _metarial28.block();\n        _machineMetarial3.disable();\n        // let _index = index % 2 === 0 ? 3 : 4;\n        // let _rail = rails[_index];\n        // if (_rail.index === 2) {\n        //     _metarial28.add();\n        //     _metarial25.move(_metarial25.distance.metarial5To8);//滑到下一个上料口\n        // } else {\n        //     _metarial18.add();\n        //     _metarial15.move(_metarial15.distance.metarial5To8);//滑到下一个上料口\n        // }\n      } else if ('toDefectiveFinish' === action) {\n        _metarial18.block();\n        _machineMetarial3.disable();\n      }\n    });\n\n    //监听第6块物料到达位置，如果到了，第8个物料+1，第6块物料重置，并不显视\n    _metarial25.addEventListener(_metarial25.event.arriveTarget, event => {\n      // _metarial28.block();\n      _metarial25.disable();\n      _metarial25.reset();\n    });\n    _metarial15.addEventListener(_metarial15.event.arriveTarget, event => {\n      // _metarial18.block();\n      _metarial15.disable();\n      _metarial15.reset();\n    });\n  }\n}\nexport default Machine3;","map":{"version":3,"names":["Equipment","rails","angle","index","map","Map","forEach","rail","set","name","machine","smtAnimation","Machine3","constructor","_smtAnimation","getMachine","addEvent","toNextStation","tester_name","t","rotationY","action","event","toLoadRail1","metatrial","_t","get","getMetarial","toLoadRail2","toLoadRail3","rotationZ","_this","setTimeout","reduce","_metarial25","getMetrail","_metarial15","_metarial28","_metarial18","_machineMetarial3","disable","addEventListener","message","block","arriveTarget","reset"],"sources":["/Users/jens/my-app/src/Smt/components/SmtDeviceStatus/Machine3.js"],"sourcesContent":["//测试摄象头\r\nimport Equipment from './Equipment';\r\nlet rails = [\r\n    { 'name': 'loadRail2', angle: -0.2 },//发布四轴机器人3抓取事件\r\n    { 'name': 'loadRail1', angle: 0.2 },//发布四轴机器人3抓取事件\r\n    { 'name': 'loadRail3', angle: 0 },//发布四轴机器人3抓取事件\r\n    { 'name': 'downRail2', angle: -1.5, index: 1, 'event': 'toFinish', /**下料事件*/ },\r\n    { 'name': 'downRail1', angle: 1.5, index: 2, 'event': 'toDefectiveFinish'/**下料事件*/ },\r\n];\r\nlet map = new Map();\r\nrails.forEach(rail => {\r\n    map.set(rail.name, rail);\r\n});\r\n\r\nlet machine = null, smtAnimation = null, index = 0;\r\nclass Machine3 extends Equipment {\r\n    constructor(_smtAnimation) {\r\n        machine = _smtAnimation.getMachine('白色机器人');\r\n        super(machine);\r\n        smtAnimation = _smtAnimation;\r\n        this.addEvent();\r\n    }\r\n\r\n    //让6轴机器人转到下料口\r\n    toNextStation(tester_name) {\r\n        if (index === 1 || index === 2) {\r\n            index = 3;\r\n        } else {\r\n            index = 4\r\n        }\r\n        let t = rails[index];\r\n        super.rotationY({ angle: t.angle, action: t.event, name: t.name });//发布事件，让下\r\n        // if (index === 2) {//切换轨道\r\n        //     index = 3;\r\n        // } else {\r\n        //     index = 2;\r\n        // }\r\n    }\r\n\r\n    toLoadRail1(metatrial,tester_name) {\r\n        index = 1;\r\n        let _t = map.get('loadRail1');\r\n        this.getMetarial(_t, metatrial);\r\n    }\r\n\r\n    toLoadRail2(metatrial,tester_name) {\r\n        index = 2;\r\n        let _t = map.get('loadRail2');\r\n        this.getMetarial(_t, metatrial);\r\n    }\r\n\r\n    toLoadRail3(metatrial,tester_name) {\r\n        index = 3;\r\n        let _t = map.get('loadRail3');\r\n        this.getMetarial(_t, metatrial,tester_name);\r\n    }\r\n\r\n    getMetarial(_t, metatrial,tester_name) {\r\n        this.rotationY({ angle: _t.angle, action: _t.event });\r\n        this.rotationZ({ angle: 0.3 }, 1);\r\n        const _this = this;\r\n        setTimeout(() => {//做一个取料动作\r\n            _this.rotationZ({ angle: 0.1 }, -1);\r\n            metatrial.reduce();\r\n            this.toNextStation(tester_name);\r\n        }, 500);\r\n    }\r\n\r\n    addEvent() {\r\n        let _metarial25 = smtAnimation.getMetrail('轨道2物料5');\r\n        let _metarial15 = smtAnimation.getMetrail('轨道1物料5');\r\n        let _metarial28 = smtAnimation.getMetrail('完成绿色物料');\r\n        let _metarial18 = smtAnimation.getMetrail('不良灰色物料完成');\r\n        let _machineMetarial3 = smtAnimation.getMetrail('夹起的物料');\r\n        _metarial25.disable()\r\n        _machineMetarial3.disable();\r\n        _metarial28.disable();\r\n        _metarial18.disable();\r\n        machine.addEventListener(machine.event.rotationY, event => {\r\n            let message = event.message;\r\n            let action = message.action;\r\n            _metarial28.disable();\r\n            _metarial18.disable();\r\n            _machineMetarial3.block();\r\n\r\n            if ('toFinish' === action) {//监听物料到达下一个出口\r\n                _metarial28.block();\r\n                _machineMetarial3.disable();\r\n                // let _index = index % 2 === 0 ? 3 : 4;\r\n                // let _rail = rails[_index];\r\n                // if (_rail.index === 2) {\r\n                //     _metarial28.add();\r\n                //     _metarial25.move(_metarial25.distance.metarial5To8);//滑到下一个上料口\r\n                // } else {\r\n                //     _metarial18.add();\r\n                //     _metarial15.move(_metarial15.distance.metarial5To8);//滑到下一个上料口\r\n                // }\r\n            } else if('toDefectiveFinish' === action) {\r\n                _metarial18.block();\r\n                _machineMetarial3.disable();\r\n            }\r\n        });\r\n\r\n\r\n        //监听第6块物料到达位置，如果到了，第8个物料+1，第6块物料重置，并不显视\r\n        _metarial25.addEventListener(_metarial25.event.arriveTarget, event => {\r\n            // _metarial28.block();\r\n            _metarial25.disable();\r\n            _metarial25.reset();\r\n        });\r\n\r\n        _metarial15.addEventListener(_metarial15.event.arriveTarget, event => {\r\n            // _metarial18.block();\r\n            _metarial15.disable();\r\n            _metarial15.reset();\r\n        });\r\n    }\r\n}\r\n\r\nexport default Machine3;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}