{"ast":null,"code":"import AnimationUtil from '/utils/AnimationUtil';\nimport RailMetarial from '@/utils/RailMetarial';\nimport Machine from '@/utils/Machine';\nimport Machine1 from \"./Machine1\";\nimport Machine2 from \"./Machine2\";\nimport Machine3 from \"./Machine3\";\nimport * as THREE from 'three';\nimport AxiosHttp from \"@/utils/AxiosHttp\";\n// import  { line } from \"@/utils/Config\";\nlet loadMuodle = null;\nlet animationUtil = new AnimationUtil();\n// let sixMachine1Type = { 'retrieve': 'retrieve', 'retrieveDown': 'retrieveDown', 'retrieveUp': 'retrieveUp', 'load': 'load', 'loadUp': 'loadUp', 'loadDown': 'loadDown' };\nlet metarialMap = new Map();\nlet machineMap = new Map();\nlet actionData = [{\n  count: 0\n}, {\n  count: 0\n}, {\n  count: 0\n}];\nclass SmtDeviceAnimation {\n  constructor() {\n    //渲染动画\n    this.animate = function () {\n      // this.animation();\n      //this.times++;\n      //if (this.times < 20)\n      // setInterval(() => {\n      //     animationUtil.renderOnly();\n      // }, 1000);\n      animationUtil.render(this.animate);\n    }.bind(this);\n  }\n  initdata() {\n    this.machine1 = new Machine1(this);\n    this.railMetarial = this.getMetrail('绿色待上料');\n    this.machine2 = new Machine2(this);\n    this.rail1Metarial3 = this.getMetrail('轨道1物料3');\n    this.rail2Metarial3 = this.getMetrail('轨道2物料3');\n    this.machine3 = new Machine3(this);\n    this.rail1Metarial5 = this.getMetrail('轨道1物料5');\n    this.rail2Metarial5 = this.getMetrail('轨道2物料5');\n    this.defectiveMetarial3 = this.getMetrail('灰色物料3');\n  }\n  initAction() {\n    // setInterval(()=>{ \n    // if(!document.hidden&&window.location.hash==='#/smt'){\n    AxiosHttp.post('/smt/actionData').then(res => {\n      this.handleActionData(res);\n    }).catch(err => {\n      console.log(err);\n    });\n\n    // this.railMetarial.add({start:1,target:'M8'});\n    // this.railMetarial.add({start:'M8',target:1});\n    // this.rail1Metarial3.add({start:1,target:'M8'});\n    // this.rail1Metarial3.add({start:'M8',target:1});\n    // this.rail1Metarial5.add({start:1,target:1});\n    // this.defectiveMetarial3.add({start:1,target:2});\n\n    // this.rail2Metarial3.add({start:'M6',target:2});\n    // this.rail1Metarial5.add({start:1,target:2});\n    // this.rail2Metarial5.add({start:2,target:2});\n    // this.defectiveMetarial3.add({start:1,target:2});\n\n    // }\n    // },3000)\n  }\n  handleActionData(res) {\n    let result = res.value;\n    if (res.ok === 1 && result.length) {\n      result.map(item => {\n        if (/l/i.test(item.rows[0].StartStationNo)) {\n          item.rows[0].StartStationNo = [...item.rows[0].StartStationNo][1] * 1;\n        }\n        if (/l/i.test(item.rows[0].TargetStationNo)) {\n          item.rows[0].TargetStationNo = [...item.rows[0].TargetStationNo][1] * 1;\n        }\n        return item;\n      });\n      result.forEach((item, index) => {\n        let data = item.rows[0];\n        switch (data.CellName) {\n          case \"Cell1\":\n            if (item.count !== actionData[0].count) {\n              this.railMetarial.add({\n                start: data.StartStationNo,\n                target: data.TargetStationNo\n              });\n            }\n            break;\n          case 'Cell2':\n            if (item.count !== actionData[1].count) {\n              if (data.StartStationNo === 1 || data.TargetStationNo === 1) {\n                this.rail1Metarial3.add({\n                  start: data.StartStationNo,\n                  target: data.TargetStationNo\n                });\n              } else if (data.StartStationNo === 2 || data.TargetStationNo === 2 || data.TargetStationNo === 3) {\n                this.rail2Metarial3.add({\n                  start: data.StartStationNo,\n                  target: data.TargetStationNo\n                });\n              }\n            }\n            break;\n          default:\n            if (item.count !== actionData[2].count) {\n              if (data.StartStationNo === 1) {\n                this.rail1Metarial5.add({\n                  start: data.StartStationNo,\n                  target: data.TargetStationNo\n                });\n              } else if (data.StartStationNo === 2) {\n                this.rail2Metarial5.add({\n                  start: data.StartStationNo,\n                  target: data.TargetStationNo\n                });\n              } else {\n                this.defectiveMetarial3.add({\n                  start: data.StartStationNo,\n                  target: data.TargetStationNo\n                });\n              }\n            }\n            break;\n        }\n      });\n      actionData = result;\n    }\n  }\n\n  // //获取工位数据\n  // getSmtTesterData = () => {\n  //     AxiosHttp\n  //         // .get('/tester1/testData/line2')\n  //         .post('/smt/testLogs')\n  //         .then(this.handleTesterdata);\n  // };\n\n  // handleTesterdata = function(response) {\n  //     console.log(response,'获取工位数据');\n  //     let res = response.value;\n  //     if(!response.value || response.value.length === 0) {\n  //         return;\n  //     }\n  //     if(res.Result === 1) {// 0：机器人3 NG轨道上料，1：机器人1上料， 2：轨道1上料，3：轨道2上料，4：轨道1下料，5：轨道2下料，6：NG轨道下料\n  //         this.railMetarial.add(res.TesterName);\n  //     } else if(res.Result === 2 || res.Result === 3 || res.Result === 0) { //上料\n  //         if(res.CellName === 'cell2') {\n  //             if(res.Result === 2) {// 轨道1\n  //                this.rail1Metarial3.add(res.TesterName);\n  //             } else {// 轨道2\n  //                this.rail2Metarial3.add(res.TesterName);\n  //             }\n  //         } else if(res.CellName === 'cell3') {\n  //             if(res.Result === 2) {// 轨道1\n  //                 this.rail1Metarial5.add(res.TesterName);\n  //             } else if(res.Result === 3) {// 轨道2\n  //                 this.rail2Metarial5.add(res.TesterName);\n  //             } else if(res.Result === 0) {// 机器人3从NG轨道上料\n  //                 this.defectiveMetarial3.add(res.TesterName);\n  //             }\n  //         }\n  //     } else if(res.Result === 4 || res.Result === 5 || res.Result === 6) {//下料\n  //         if(res.CellName === 'cell1') {\n  //             this.machine1.moToRail({name: res.TesterName,result:res.Result})\n  //         } else if(res.CellName === 'cell2') {\n  //             this.machine2.moToRail({name: res.TesterName,result:res.Result})\n  //         }\n  //     }\n  // }.bind(this);\n\n  //初始化第一个物料\n  initMetarial1() {\n    let railMetarial = this.getMetrail('绿色待上料');\n    railMetarial.disable();\n    // setInterval(() => {\n    //     railMetarial.add();\n    // },3000);\n  }\n\n  //初始化第一个机器人\n  initMachine1() {\n    let machine1 = new Machine1(this);\n    let railMetarial = metarialMap.get('绿色待上料');\n    // let randomNum = Math.round(Math.random());\n    // Machine1.toLoadRail1();\n    // 上一个工站，会触发添加事件\n    // if(randomNum) {\n    railMetarial.addEventListener(railMetarial.event.add, event => {\n      //驱动四轴机器人1来取料\n      if (/M/i.test(event.message.tester_mess.start)) {\n        machine1.moToRail(event.message.tester_mess);\n      } else {\n        machine1.toLoadRail1(railMetarial, event.message.tester_mess);\n      }\n    });\n    // } else {\n    // railMetarial.addEventListener(railMetarial.event.add, event => {\n    //     machine1.toLoadRail2(railMetarial,event.message.tester_mess);\n    // });\n    // }\n  }\n\n  //初始化第二个机器人\n  initMachine2() {\n    let machine2 = new Machine2(this);\n    let rail1Metarial3 = metarialMap.get('轨道1物料3');\n    let rail2Metarial3 = metarialMap.get('轨道2物料3');\n\n    // Machine1.toLoadRail1();\n    //上一个工站，会触发添加事件\n    rail1Metarial3.addEventListener(rail1Metarial3.event.add, event => {\n      //驱动四轴机器人2来取料\n      if (/M/i.test(event.message.tester_mess.start)) {\n        machine2.moToRail(event.message.tester_mess);\n      } else {\n        machine2.toLoadRail1(rail1Metarial3, event.message.tester_mess);\n      }\n    });\n    rail2Metarial3.addEventListener(rail2Metarial3.event.add, event => {\n      if (/M/i.test(event.message.tester_mess.start)) {\n        machine2.moToRail(event.message.tester_mess);\n      } else {\n        machine2.toLoadRail2(rail2Metarial3, event.message.tester_mess);\n      }\n    });\n  }\n\n  //初始化第三个机器人\n  initMachine3() {\n    let machine3 = new Machine3(this);\n    let rail1Metarial5 = metarialMap.get('轨道1物料5');\n    let rail2Metarial5 = metarialMap.get('轨道2物料5');\n    let defectiveMetarial3 = metarialMap.get('灰色物料3');\n\n    // Machine1.toLoadRail1();\n    //上一个工站，会触发添加事件\n    rail1Metarial5.addEventListener(rail1Metarial5.event.add, event => {\n      //驱动四轴机器人3来取料\n      machine3.toLoadRail1(rail1Metarial5, event.message.tester_mess);\n    });\n    rail2Metarial5.addEventListener(rail2Metarial5.event.add, event => {\n      machine3.toLoadRail2(rail2Metarial5, event.message.tester_mess);\n    });\n    defectiveMetarial3.addEventListener(defectiveMetarial3.event.add, event => {\n      machine3.toLoadRail3(defectiveMetarial3, event.message.tester_mess);\n    });\n  }\n  init(containerId, modelUrl) {\n    animationUtil.init(containerId);\n    //加载模型\n    let promise = animationUtil.loadFbx(modelUrl);\n    return promise.then(object => {\n      loadMuodle = object;\n      //調整位置\n      object.position.y = 100;\n      object.position.x = -500;\n      object.position.z = 200;\n      // object.rotateX(-(Math.PI/2)*0.2);\n      object.scale.set(1.2, 1.2, 1.2);\n      this.model = object;\n      this.disableAllMetarial();\n      this.animate();\n      this.times = 0;\n      this.initFont('良品数', '良品数', 18);\n      this.initFont('不良数', '不良数', 18);\n    }).catch(error => {\n      console.error('load model:  ' + JSON.stringify(error));\n    });\n  }\n  initFont(text, group, size, mes) {\n    //修改文本\n    let font = animationUtil.loadFont();\n    font.then(obj => {\n      let g = new THREE.TextGeometry(text, {\n        // 设定文字字体，\n        font: obj,\n        //尺寸\n        size: size || 20,\n        //厚度\n        height: 4,\n        curveSegments: 5\n      });\n      //计算边界，暂时不用管\n      g.computeBoundingBox();\n      //3D文字材质\n      let m = new THREE.MeshBasicMaterial();\n      let mesh = new THREE.Mesh(g, m);\n\n      // 加入到场景中\n      let fontGroup = animationUtil.getMeshByName(loadMuodle, group);\n      if (mes) {\n        fontGroup.children[0].visible = false;\n        mesh.position.copy(fontGroup.children[0].position);\n        mesh.rotation.x = Math.PI / -2;\n        mesh.geometry.center();\n        mesh.material.color.copy(fontGroup.children[0].material.color);\n        fontGroup.add(mesh);\n      } else {\n        fontGroup.children[0].visible = false;\n        mesh.position.copy(fontGroup.children[0].position);\n        mesh.rotation.copy(fontGroup.children[0].rotation);\n        mesh.scale.copy(fontGroup.children[0].scale);\n        mesh.material.color.copy(fontGroup.children[0].material.color);\n        fontGroup.children.pop();\n        fontGroup.add(mesh);\n      }\n    });\n  }\n  initStationStatus(status) {\n    //初始化个检测工位的状态\n    status.forEach(item => {\n      this.initFont(item.number, item.number, 18, item.index = 0);\n      if (item.status === \"unEnable\") {\n        this.getMetrail(item.number).meterial.children[0].material.color = {\n          r: 0.09137055837563457,\n          g: 0.09137055837563457,\n          b: 0.09137055837563457\n        };\n      } else if (item.status === \"enable\") {\n        // this.getMetrail(item.number).meterial.children[0].material.color={r: 0.7902532316860755, g: 0.2630827112431621, b: 0.2630827112431621}\n        this.getMetrail(item.number).meterial.children[0].material.color = {\n          r: 8.397118308078596e-17,\n          g: 0.7563451776649747,\n          b: 0.1512690355329951\n        };\n      }\n      // else{\n      //     this.getMetrail(item.number).meterial.children[0].material.color={r: 8.397118308078596e-17, g: 0.7563451776649747, b: 0.1512690355329951}\n      //  }\n    });\n  }\n\n  //隐藏掉所有物料，被驱动。\n  disableAllMetarial() {\n    for (let i = 1; i < 3; i++) {\n      //2条轨道\n      for (let y = 2; y < 6; y++) {\n        let _t = this.getMetrail('轨道' + i + '物料' + y);\n        _t.disable();\n      }\n    }\n    for (let i = 1; i < 4; i++) {\n      let _t = this.getMetrail('灰色物料' + i);\n      _t.disable();\n    }\n  }\n  getMetrail(name) {\n    if (metarialMap.has(name)) return metarialMap.get(name);\n    let _m = animationUtil.getMeshByName(this.model, name);\n    _m = new RailMetarial(_m, animationUtil, name);\n    metarialMap.set(name, _m);\n    return _m;\n  }\n  getMachine(name) {\n    if (machineMap.has(name)) return machineMap.get(name);\n    let _m = animationUtil.getMeshByName(this.model, name);\n    _m = new Machine(_m, animationUtil, name);\n    machineMap.set(name, _m);\n    return _m;\n  }\n  getMeshByName(name) {\n    return animationUtil.getMeshByName(this.model, name);\n  }\n}\nexport default new SmtDeviceAnimation();","map":{"version":3,"names":["AnimationUtil","RailMetarial","Machine","Machine1","Machine2","Machine3","THREE","AxiosHttp","loadMuodle","animationUtil","metarialMap","Map","machineMap","actionData","count","SmtDeviceAnimation","constructor","animate","render","bind","initdata","machine1","railMetarial","getMetrail","machine2","rail1Metarial3","rail2Metarial3","machine3","rail1Metarial5","rail2Metarial5","defectiveMetarial3","initAction","post","then","res","handleActionData","catch","err","console","log","result","value","ok","length","map","item","test","rows","StartStationNo","TargetStationNo","forEach","index","data","CellName","add","start","target","initMetarial1","disable","initMachine1","get","addEventListener","event","message","tester_mess","moToRail","toLoadRail1","initMachine2","toLoadRail2","initMachine3","toLoadRail3","init","containerId","modelUrl","promise","loadFbx","object","position","y","x","z","scale","set","model","disableAllMetarial","times","initFont","error","JSON","stringify","text","group","size","mes","font","loadFont","obj","g","TextGeometry","height","curveSegments","computeBoundingBox","m","MeshBasicMaterial","mesh","Mesh","fontGroup","getMeshByName","children","visible","copy","rotation","Math","PI","geometry","center","material","color","pop","initStationStatus","status","number","meterial","r","b","i","_t","name","has","_m","getMachine"],"sources":["/Users/jens/my-app/src/Smt/components/SmtDeviceStatus/SmtDeviceAnimation.js"],"sourcesContent":["import AnimationUtil from '/utils/AnimationUtil';\r\nimport RailMetarial from '@/utils/RailMetarial';\r\nimport Machine from '@/utils/Machine';\r\nimport Machine1 from \"./Machine1\";\r\nimport Machine2 from \"./Machine2\";\r\nimport Machine3 from \"./Machine3\";\r\nimport * as THREE from 'three'\r\n\r\nimport AxiosHttp from \"@/utils/AxiosHttp\";\r\n// import  { line } from \"@/utils/Config\";\r\nlet loadMuodle=null\r\n\r\nlet animationUtil = new AnimationUtil();\r\n// let sixMachine1Type = { 'retrieve': 'retrieve', 'retrieveDown': 'retrieveDown', 'retrieveUp': 'retrieveUp', 'load': 'load', 'loadUp': 'loadUp', 'loadDown': 'loadDown' };\r\nlet metarialMap = new Map();\r\nlet machineMap = new Map();\r\nlet actionData=[\r\n    {count:0},\r\n    {count:0},\r\n    {count:0},\r\n]\r\nclass SmtDeviceAnimation{\r\n\r\n    initdata() {\r\n        this.machine1 = new Machine1(this);\r\n        this.railMetarial = this.getMetrail('绿色待上料');\r\n       \r\n        this.machine2 = new Machine2(this);\r\n        this.rail1Metarial3 = this.getMetrail('轨道1物料3');\r\n        this.rail2Metarial3 = this.getMetrail('轨道2物料3');\r\n\r\n        this.machine3 = new Machine3(this);\r\n        this.rail1Metarial5 = this.getMetrail('轨道1物料5');\r\n        this.rail2Metarial5 = this.getMetrail('轨道2物料5');\r\n        this.defectiveMetarial3 = this.getMetrail('灰色物料3');\r\n    }\r\n\r\n\r\n    initAction(){\r\n        // setInterval(()=>{ \r\n            // if(!document.hidden&&window.location.hash==='#/smt'){\r\n                AxiosHttp.post('/smt/actionData')\r\n                .then(res=>{this.handleActionData(res)})\r\n                .catch(err=>{\r\n                    console.log(err)\r\n                })\r\n\r\n                // this.railMetarial.add({start:1,target:'M8'});\r\n                // this.railMetarial.add({start:'M8',target:1});\r\n                // this.rail1Metarial3.add({start:1,target:'M8'});\r\n                // this.rail1Metarial3.add({start:'M8',target:1});\r\n                // this.rail1Metarial5.add({start:1,target:1});\r\n                // this.defectiveMetarial3.add({start:1,target:2});\r\n\r\n                // this.rail2Metarial3.add({start:'M6',target:2});\r\n                // this.rail1Metarial5.add({start:1,target:2});\r\n                // this.rail2Metarial5.add({start:2,target:2});\r\n                // this.defectiveMetarial3.add({start:1,target:2});\r\n  \r\n            // }\r\n        // },3000)\r\n       \r\n    }\r\n\r\n    handleActionData(res){\r\n        let result=res.value\r\n        if(res.ok===1&&result.length){\r\n            result.map((item)=>{\r\n               if(/l/i.test(item.rows[0].StartStationNo)){\r\n                item.rows[0].StartStationNo=[...item.rows[0].StartStationNo][1]*1\r\n               }\r\n               if(/l/i.test(item.rows[0].TargetStationNo)){\r\n                item.rows[0].TargetStationNo=[...item.rows[0].TargetStationNo][1]*1\r\n               }\r\n               return item\r\n            })\r\n            \r\n            result.forEach((item,index)=>{\r\n                let data=item.rows[0]\r\n                switch(data.CellName){\r\n                    case \"Cell1\":\r\n                    if(item.count !==actionData[0].count ){\r\n                        this.railMetarial.add({start:data.StartStationNo,target:data.TargetStationNo}) \r\n                    }\r\n                    break;\r\n                    case 'Cell2':\r\n                    if(item.count !==actionData[1].count){\r\n                        if(data.StartStationNo===1||data.TargetStationNo===1){\r\n                            this.rail1Metarial3.add({start:data.StartStationNo,target:data.TargetStationNo})     \r\n                        }else if(data.StartStationNo===2||data.TargetStationNo===2||data.TargetStationNo===3){\r\n                            this.rail2Metarial3.add({start:data.StartStationNo,target:data.TargetStationNo})  \r\n                        }\r\n                    }   \r\n                    break;\r\n                    default :\r\n                    if(item.count !==actionData[2].count){\r\n                        if(data.StartStationNo===1 ){\r\n                            this.rail1Metarial5.add({start:data.StartStationNo,target:data.TargetStationNo});\r\n                        }else if(data.StartStationNo===2 ){\r\n                            this.rail2Metarial5.add({start:data.StartStationNo,target:data.TargetStationNo});\r\n                        }else{\r\n                            this.defectiveMetarial3.add({start:data.StartStationNo,target:data.TargetStationNo});\r\n                        }\r\n                    }\r\n                    break;\r\n                }\r\n            })\r\n               \r\n            actionData=result;  \r\n          \r\n        }   \r\n    }\r\n\r\n    // //获取工位数据\r\n    // getSmtTesterData = () => {\r\n    //     AxiosHttp\r\n    //         // .get('/tester1/testData/line2')\r\n    //         .post('/smt/testLogs')\r\n    //         .then(this.handleTesterdata);\r\n    // };\r\n\r\n    // handleTesterdata = function(response) {\r\n    //     console.log(response,'获取工位数据');\r\n    //     let res = response.value;\r\n    //     if(!response.value || response.value.length === 0) {\r\n    //         return;\r\n    //     }\r\n    //     if(res.Result === 1) {// 0：机器人3 NG轨道上料，1：机器人1上料， 2：轨道1上料，3：轨道2上料，4：轨道1下料，5：轨道2下料，6：NG轨道下料\r\n    //         this.railMetarial.add(res.TesterName);\r\n    //     } else if(res.Result === 2 || res.Result === 3 || res.Result === 0) { //上料\r\n    //         if(res.CellName === 'cell2') {\r\n    //             if(res.Result === 2) {// 轨道1\r\n    //                this.rail1Metarial3.add(res.TesterName);\r\n    //             } else {// 轨道2\r\n    //                this.rail2Metarial3.add(res.TesterName);\r\n    //             }\r\n    //         } else if(res.CellName === 'cell3') {\r\n    //             if(res.Result === 2) {// 轨道1\r\n    //                 this.rail1Metarial5.add(res.TesterName);\r\n    //             } else if(res.Result === 3) {// 轨道2\r\n    //                 this.rail2Metarial5.add(res.TesterName);\r\n    //             } else if(res.Result === 0) {// 机器人3从NG轨道上料\r\n    //                 this.defectiveMetarial3.add(res.TesterName);\r\n    //             }\r\n    //         }\r\n    //     } else if(res.Result === 4 || res.Result === 5 || res.Result === 6) {//下料\r\n    //         if(res.CellName === 'cell1') {\r\n    //             this.machine1.moToRail({name: res.TesterName,result:res.Result})\r\n    //         } else if(res.CellName === 'cell2') {\r\n    //             this.machine2.moToRail({name: res.TesterName,result:res.Result})\r\n    //         }\r\n    //     }\r\n    // }.bind(this);\r\n\r\n    //初始化第一个物料\r\n    initMetarial1() {\r\n        let railMetarial = this.getMetrail('绿色待上料');\r\n        railMetarial.disable();\r\n        // setInterval(() => {\r\n        //     railMetarial.add();\r\n        // },3000);\r\n    }\r\n\r\n    //初始化第一个机器人\r\n    initMachine1() {\r\n        let machine1 = new Machine1(this);\r\n        let railMetarial = metarialMap.get('绿色待上料');\r\n        // let randomNum = Math.round(Math.random());\r\n        // Machine1.toLoadRail1();\r\n        // 上一个工站，会触发添加事件\r\n        // if(randomNum) {\r\n            railMetarial.addEventListener(railMetarial.event.add, event => {\r\n                //驱动四轴机器人1来取料\r\n                if(/M/i.test(event.message.tester_mess.start)){\r\n                    machine1.moToRail(event.message.tester_mess)\r\n                }else{\r\n                    machine1.toLoadRail1(railMetarial,event.message.tester_mess);\r\n                }\r\n            });\r\n        // } else {\r\n            // railMetarial.addEventListener(railMetarial.event.add, event => {\r\n            //     machine1.toLoadRail2(railMetarial,event.message.tester_mess);\r\n            // });\r\n        // }\r\n      \r\n    }\r\n\r\n    //初始化第二个机器人\r\n    initMachine2() {\r\n        let machine2 = new Machine2(this);\r\n        let rail1Metarial3 = metarialMap.get('轨道1物料3');\r\n        let rail2Metarial3 = metarialMap.get('轨道2物料3');\r\n       \r\n        // Machine1.toLoadRail1();\r\n        //上一个工站，会触发添加事件\r\n        rail1Metarial3.addEventListener(rail1Metarial3.event.add, event => {\r\n            //驱动四轴机器人2来取料\r\n            if(/M/i.test(event.message.tester_mess.start)){\r\n                machine2.moToRail(event.message.tester_mess)\r\n            }else{\r\n                machine2.toLoadRail1(rail1Metarial3,event.message.tester_mess);\r\n            }\r\n        });\r\n\r\n        rail2Metarial3.addEventListener(rail2Metarial3.event.add, event => {\r\n            if(/M/i.test(event.message.tester_mess.start)){\r\n                machine2.moToRail(event.message.tester_mess)\r\n            }else{\r\n                machine2.toLoadRail2(rail2Metarial3,event.message.tester_mess);\r\n            } \r\n        });\r\n     \r\n       \r\n    }\r\n\r\n    //初始化第三个机器人\r\n    initMachine3() {\r\n        let machine3 = new Machine3(this);\r\n        let rail1Metarial5 = metarialMap.get('轨道1物料5');\r\n        let rail2Metarial5 = metarialMap.get('轨道2物料5');\r\n        let defectiveMetarial3 = metarialMap.get('灰色物料3');\r\n\r\n        // Machine1.toLoadRail1();\r\n        //上一个工站，会触发添加事件\r\n        rail1Metarial5.addEventListener(rail1Metarial5.event.add, event => {\r\n            //驱动四轴机器人3来取料\r\n            machine3.toLoadRail1(rail1Metarial5,event.message.tester_mess);\r\n           \r\n        });\r\n\r\n        rail2Metarial5.addEventListener(rail2Metarial5.event.add, event => {\r\n            machine3.toLoadRail2(rail2Metarial5,event.message.tester_mess) \r\n           \r\n        });\r\n\r\n        defectiveMetarial3.addEventListener(defectiveMetarial3.event.add, event => {\r\n            machine3.toLoadRail3(defectiveMetarial3,event.message.tester_mess);\r\n        });\r\n       \r\n    }\r\n\r\n    init(containerId, modelUrl) {\r\n        animationUtil.init(containerId);\r\n        //加载模型\r\n        let promise = animationUtil.loadFbx(modelUrl);\r\n        return promise.then((object) => {\r\n            loadMuodle=object\r\n            //調整位置\r\n            object.position.y =100;\r\n            object.position.x = -500;\r\n            object.position.z=200;\r\n            // object.rotateX(-(Math.PI/2)*0.2);\r\n            object.scale.set(1.2,1.2,1.2);\r\n            this.model = object;\r\n            this.disableAllMetarial();\r\n            this.animate();\r\n            this.times = 0;\r\n            this.initFont('良品数','良品数',18);\r\n            this.initFont('不良数','不良数',18);\r\n           \r\n        }).catch(error => {\r\n            console.error('load model:  ' + JSON.stringify(error));\r\n        });\r\n    }\r\n    initFont(text,group,size,mes){ //修改文本\r\n        let font = animationUtil.loadFont();\r\n                font.then((obj)=>{\r\n                let g = new THREE.TextGeometry(text,{\r\n                    // 设定文字字体，\r\n                    font:obj,\r\n                    //尺寸\r\n                    size:size||20,\r\n                    //厚度\r\n                    height:4,\r\n                    curveSegments: 5\r\n                });\r\n                //计算边界，暂时不用管\r\n                g.computeBoundingBox();\r\n                //3D文字材质\r\n                let m = new THREE.MeshBasicMaterial();\r\n                let mesh = new THREE.Mesh(g,m);\r\n            \r\n                    // 加入到场景中\r\n                let   fontGroup = animationUtil.getMeshByName(loadMuodle,group);\r\n                        if(mes){\r\n                           \r\n                            fontGroup.children[0].visible = false;\r\n                            mesh.position.copy(fontGroup.children[0].position);\r\n                            mesh.rotation.x=(Math.PI)/-2\r\n                            mesh.geometry.center()\r\n                            mesh.material.color.copy(fontGroup.children[0].material.color);\r\n                            fontGroup.add(mesh);  \r\n                        }else{\r\n                            fontGroup.children[0].visible = false;\r\n                            mesh.position.copy(fontGroup.children[0].position);\r\n                            mesh.rotation.copy(fontGroup.children[0].rotation);\r\n                            mesh.scale.copy(fontGroup.children[0].scale);\r\n                            mesh.material.color.copy(fontGroup.children[0].material.color);\r\n                            fontGroup.children.pop();\r\n                            fontGroup.add(mesh);  \r\n                        }\r\n   \r\n                })\r\n     \r\n       \r\n    }\r\n    \r\n\r\n    initStationStatus(status){ //初始化个检测工位的状态\r\n        status.forEach(item=>{\r\n            this.initFont(item.number,item.number,18,item.index=0)\r\n             if(item.status===\"unEnable\"){\r\n                this.getMetrail(item.number).meterial.children[0].material.color={r: 0.09137055837563457, g: 0.09137055837563457, b: 0.09137055837563457}\r\n             }else if(item.status===\"enable\"){\r\n                // this.getMetrail(item.number).meterial.children[0].material.color={r: 0.7902532316860755, g: 0.2630827112431621, b: 0.2630827112431621}\r\n                this.getMetrail(item.number).meterial.children[0].material.color={r: 8.397118308078596e-17, g: 0.7563451776649747, b: 0.1512690355329951}\r\n             }\r\n            // else{\r\n            //     this.getMetrail(item.number).meterial.children[0].material.color={r: 8.397118308078596e-17, g: 0.7563451776649747, b: 0.1512690355329951}\r\n            //  }\r\n        })\r\n       \r\n    }\r\n\r\n\r\n    //隐藏掉所有物料，被驱动。\r\n    disableAllMetarial() {\r\n        for (let i = 1; i < 3; i++) {//2条轨道\r\n            for (let y = 2; y < 6; y++) {\r\n                let _t = this.getMetrail('轨道' + i + '物料' + y);\r\n                _t.disable();\r\n            }\r\n        }\r\n        for (let i = 1; i <  4; i++) {\r\n            let _t = this.getMetrail('灰色物料' + i);\r\n            _t.disable();\r\n        }\r\n    }\r\n\r\n    //渲染动画\r\n    animate = function () {\r\n        // this.animation();\r\n        //this.times++;\r\n        //if (this.times < 20)\r\n        // setInterval(() => {\r\n        //     animationUtil.renderOnly();\r\n        // }, 1000);\r\n        animationUtil.render(this.animate);\r\n    }.bind(this);\r\n\r\n    getMetrail(name) {\r\n        if (metarialMap.has(name)) return metarialMap.get(name);\r\n        let _m = animationUtil.getMeshByName(this.model, name);\r\n        _m = new RailMetarial(_m, animationUtil, name);\r\n        metarialMap.set(name, _m);\r\n        return _m;\r\n    }\r\n\r\n    getMachine(name) {\r\n        if (machineMap.has(name)) return machineMap.get(name);\r\n        let _m = animationUtil.getMeshByName(this.model, name);\r\n        _m = new Machine(_m, animationUtil, name);\r\n        machineMap.set(name, _m);\r\n        return _m;\r\n    }\r\n\r\n    getMeshByName(name) {\r\n        return animationUtil.getMeshByName(this.model, name);\r\n    }\r\n\r\n}\r\n\r\nexport default new SmtDeviceAnimation();"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}